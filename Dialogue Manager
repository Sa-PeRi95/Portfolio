using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.SceneManagement;

public class DialogueManager : MonoBehaviour
{
    // Samu

    public Dialogue[] conversations;
    private Queue<string> sentences;
    private int index = 0;
    public Text nameText, dialogueText;
    [SerializeField] Image Charon;
    [SerializeField] Image Persephone;
    [SerializeField] Image Hades;
    [SerializeField] Text EndCard;
    public Animator animator;
    private CanvasGroup canvasGroup;
    private bool clicked = false;
    private Image fade;
    private Animator fader;
    

    // Start is called before the first frame update
    void Start()
    {
        DialogueTrigger dialogueTrigger = FindObjectOfType<DialogueTrigger>();
        conversations = dialogueTrigger.conversations;
        sentences = new Queue<string>();
        canvasGroup = GameObject.Find("DialogueBox").GetComponent<CanvasGroup>();
        Charon.gameObject.SetActive(false);
        EndCard.gameObject.SetActive(false);
        fade = GameObject.Find("Fade").GetComponent<Image>();
        fader = GameObject.Find("Fade").GetComponent<Animator>();
    }

    public void StartDialogue(Dialogue conversation)
    {
        //animator.SetBool("isOpen", true);
        nameText.text = conversation.name;

        sentences.Clear();

        foreach (string sentence in conversations[index].sentences)
        {
            sentences.Enqueue(sentence);
        }

        DisplayNextSentence();
    }

    public void DisplaySentence()
    {
        if (clicked == true)
        {
            setIndex(GetIndex());
            foreach (string sentenceD in conversations[index].sentences)
            {
                sentences.Enqueue(sentenceD);
            }
            string sentence = sentences.Dequeue();
            dialogueText.text = sentence;
            clicked = false;
            StopAllCoroutines();
        }
        else
        {
            DisplayNextSentence();
        }
    }

    public void DisplayNextSentence()
    {

        clicked = true;
        if (sentences.Count == 0)
        {
            EndDialogue();
            return;
        }

        if (nameText.text == "Persephone")
        {
            showPersephone();
        }
        else if (nameText.text == "Hades")
        {
            showHades();
        }
        else
        {
            showCharon();
        }

        string sentence = sentences.Dequeue();
        StopAllCoroutines();
        StartCoroutine(TypeSentence(sentence));
    }

    public void DisplayRight(int i)
    {
        setIndex(i);
        StartDialogue(conversations[index]);
    }

    public void Skip()
    {
        setIndex(31);
        EndDialogue();
    }


    IEnumerator TypeSentence(string sentence)
    {
        dialogueText.text = "";
        foreach (char letter in sentence.ToCharArray())
        {
            dialogueText.text += letter;
            yield return null;
        }
        clicked = false;
    }

    public void EndDialogue()
    {
        index++;
        if (index < conversations.Length)
        {
            StartDialogue(conversations[index]);
            return;
        }
        else
        {        
            StartCoroutine("Fading");
            hideDialogue();
            showEndCard();
            Debug.Log("End of dialogue.");
            //animator.SetBool("isOpen", false);
        }
    }

    public void hideDialogue()
    {
        canvasGroup.alpha = 0f;
        canvasGroup.blocksRaycasts = false;
    }

    public void showEndCard()
    {
        EndCard.gameObject.SetActive(true);
    }

    public void showCharon()
    {
        Charon.gameObject.SetActive(true);
        Persephone.gameObject.SetActive(false);
        Hades.gameObject.SetActive(false);
    }

    public void showHades()
    {
        Hades.gameObject.SetActive(true);
        Charon.gameObject.SetActive(false);
        Persephone.gameObject.SetActive(false);
    }

    public void showPersephone()
    {
        Persephone.gameObject.SetActive(true);
        Charon.gameObject.SetActive(false);
        Hades.gameObject.SetActive(false);
    }

    public int GetIndex()
    {
        return index;
    }

    public void setIndex(int i)
    {
        index = i;
    }

    public void StartFade()
    {
        StartCoroutine("Fading");
    }

    IEnumerator Fading()
    {
        yield return new WaitForSeconds(5);
        fader.SetBool("Fade", true);
        yield return new WaitUntil(() => fade.color.a == 1);
        SceneManager.LoadScene("LevelSelection 1");
    }
}
